apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: kube-logging
  labels:
    k8s-app: kibana
data:
  kibana.yml: |-
    server.name: kibana
    server.host: "0.0.0.0"
    i18n.locale: zh-CN
    xpack.reporting.roles.enabled: false
    elasticsearch:
      hosts: ${ELASTICSEARCH_HOSTS}
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-service
  namespace: kube-logging
  labels:
    k8s-app: kibana
spec:
  type: NodePort
  ports:
  - port: 5601
    targetPort: ui
  selector:
    k8s-app: kibana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana-ingress
  namespace: kube-logging
spec:
  ingressClassName: nginx
  rules:
  - host: kibana.zhou.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kibana-service
            port: 
              number: 5601
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-deploy
  namespace: kube-logging
  labels:
    k8s-app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana
  template:
    metadata:
      labels:
        k8s-app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.14.3
        ports:
        - containerPort: 5601
          name: ui
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://es-service:9200"
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: config
          mountPath: "/usr/share/kibana/config/kibana.yml"
          subPath: "kibana.yml"
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: kibana-config